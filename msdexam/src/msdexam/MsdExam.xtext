grammar msdexam.MsdExam with org.eclipse.xtext.common.Terminals

generate msdExam "http://www.MsdExam.msdexam"

X21:
	{X21} 'program' name=ID declarations+=Declaration*
;

Declaration:
	Function | Node | Input | Stream | DataDecl | Parameter
;

Parameter:
	'parameter' name=ID ':' type=Type
;

InputNNode:
	Node | Input
;

Type:
	 {Type} type='int' |  {Type} type='string' | name=ID
;

DataDecl:
	'data' name=ID '{' dataValues+=DataValue (',' dataValues+=DataValue)* '}'
;

DataValue:
	name=ID ':' type=Type
;

//Stream:
//	'stream' (inputs+=[Node] | inputs+=[Input]) (',' (inputs+=[Node] | inputs+=[Input]))* ('to' functions+=Element (',' functions+=Element)* )+
//;

Stream: 
	'stream' inputs+=[InputNNode] (',' inputs+=[InputNNode])* ('to' functions+=Element (',' functions+=Element)* )+
;


Element://id=ID might not be correct
	funcNode=[Node] | '[' (name=ID | function=Lambda) ']' | 'output' output=ID
;

Lambda:
	'(' id=ID ':' type=Type ')' '{' exps+=Exp* '}'
;

Node:
	'node' name=ID '[' (function=[Function] | lambda=Lambda) ']'
;

Input:
	'input' name=ID ':' type=Type
;

Function:
	'function' name=ID function=Lambda
;

Variable:
	id=ID
;

Exp:
	 Plus |  Minus |  Mult |  Div | Num | Parenthesis | VariableCreation | Variable | None | New | Logical | ObjectVariable
;
VariableCreation:
	{Let} 'let' id=ID '=' exps+=Exp* 'in' body+=Exp* 'end'
;
Num:
	{Num} value=INT
;

Parenthesis:
	 {Parenthesis} '(' exps+=Exp* ')'
;

//ID Might not be correct here
ObjectVariable:
	 id=ID '.' var=Variable
;

Plus:
	{Plus}'+'
;

Minus:
	{Minus}'-'
;

Mult:
	{Mult}'*'
;

Div:
	{Div}'/'
;

Logical:
	'if' logical=LogicExp 'then' then=Exp 'else' el=Exp 'end'
;

New:
	'new' name=ID '[' variables+=NewObj (',' variables+=NewObj)* ']'
;

NewObj:
	var=Variable '=' exps+=Exp (exps+=Exp)*
;

LogicExp:
  left=Exp 
   ( logic='=' 
   | logic='<'  
   | logic='>'
   | logic='<=' 
   | logic='>=') 
   right=Exp
;

None:
	{None} 'none'
;













